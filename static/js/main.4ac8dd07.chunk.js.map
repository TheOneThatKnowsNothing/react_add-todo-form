{"version":3,"sources":["api/users.ts","api/todos.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","index.tsx"],"names":["id","name","username","email","title","completed","userId","UserInfo","user","className","href","TodoInfo","todo","cn","TodoList","todos","map","getUserById","usersFromServer","find","App","useState","todosFromServer","setTodos","setTitle","setUserId","isErrorDisplayed","setIsErrorDisplayed","action","method","onSubmit","event","preventDefault","trim","Math","max","curr","prevTodos","type","placeholder","value","onChange","target","replace","disabled","currentUser","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4ac8dd07.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import { User } from '../../types/User';\nimport './UserInfo.scss';\n\ntype Props = {\n  user: User,\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  return (\n    <a className=\"UserInfo\" href={`mailto:${user.email}`}>\n      {user.name}\n    </a>\n  );\n};\n","import cn from 'classnames';\nimport { Todo } from '../../types/Todo';\nimport { UserInfo } from '../UserInfo';\nimport './TodoInfo.scss';\n\ntype Props = {\n  todo: Todo,\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  return (\n    <article\n      data-id={todo.id}\n      className={cn(\n        'TodoInfo',\n        {\n          'TodoInfo--completed': todo.completed,\n        },\n      )}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {todo.title}\n      </h2>\n\n      { todo.user && (\n        <UserInfo user={todo.user} />\n      )}\n    </article>\n  );\n};\n","import { Todo } from '../../types/Todo';\nimport { TodoInfo } from '../TodoInfo';\n\ntype Props = {\n  todos: Todo[],\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map(todo => (\n        <TodoInfo\n          key={todo.id}\n          todo={todo}\n        />\n      ))}\n    </section>\n  );\n};\n","import { useState } from 'react';\nimport './App.scss';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport { TodoList } from './components/TodoList';\nimport { Todo } from './types/Todo';\nimport { User } from './types/User';\n\nfunction getUserById(id: number): User | null {\n  return usersFromServer.find(user => user.id === id) || null;\n}\n\nfunction getTodosFromServer(): Todo[] {\n  return todosFromServer.map(todo => ({\n    ...todo,\n    user: getUserById(todo.userId),\n  }));\n}\n\nfunction getUsersFromServer(): User[] {\n  return usersFromServer.map(user => ({\n    ...user,\n  }));\n}\n\nexport const App = () => {\n  const [todos, setTodos] = useState(getTodosFromServer());\n  const [title, setTitle] = useState('');\n  const [userId, setUserId] = useState(0);\n  const [isErrorDisplayed, setIsErrorDisplayed] = useState(false);\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/users\"\n        method=\"POST\"\n        onSubmit={(event) => {\n          event.preventDefault();\n\n          if (title.trim() === '' || userId === 0) {\n            setIsErrorDisplayed(true);\n\n            return;\n          }\n\n          const user = getUserById(userId);\n          const todo: Todo = {\n            id: Math.max(...(todos.map(curr => curr.id))) + 1,\n            title,\n            completed: false,\n            userId,\n            user,\n          };\n\n          setTodos(prevTodos => [...prevTodos, todo]);\n\n          setIsErrorDisplayed(false);\n          setUserId(0);\n          setTitle('');\n        }}\n      >\n        <div className=\"field\">\n          <label>\n            {'Title: '}\n            <input\n              type=\"text\"\n              data-cy=\"titleInput\"\n              name=\"title\"\n              placeholder=\"Enter a title\"\n              value={title}\n              onChange={(event) => {\n                setTitle(event.target.value\n                  .replace(/[^a-z\\sа-я]/gi, ''));\n              }}\n            />\n          </label>\n\n          {title.trim() === '' && isErrorDisplayed && (\n            <span className=\"error\">Please enter a title</span>\n          )}\n        </div>\n\n        <div className=\"field\">\n          <label>\n            {'User: '}\n            <select\n              data-cy=\"userSelect\"\n              onChange={(event) => setUserId(+event.target.value)}\n              value={userId}\n            >\n              <option value=\"0\" disabled>\n                Choose a user\n              </option>\n\n              {getUsersFromServer().map(currentUser => (\n                <option value={currentUser.id} key={currentUser.id}>\n                  {currentUser.name}\n                </option>\n              ))}\n            </select>\n          </label>\n          {userId === 0 && isErrorDisplayed && (\n            <span className=\"error\">Please choose a user</span>\n          )}\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}